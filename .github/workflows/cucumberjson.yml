name: Cucumber JSON
on:
  push:
    branches:
      - karan
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Clean target directory
        run: mvn clean

      - name: Install Maven dependencies
        run: mvn install -DskipTests

      - name: Clean report directory
        run: rm -rf target/*

      - name: Run Cucumber tests
        run: mvn test -Dcucumber.options="--plugin pretty --plugin junit:target/cucumber-report/cucumber.xml"

      - name: Generate JSON report
        run: mvn test -Dcucumber.options="--plugin json:target/cucumber.json"

      - name: Upload report to GitHub Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cucumber-report
          path: target/cucumber.json

      - name: Parse JSON report
        id: parse_json
        run: |
          features=$(jq '. | length' target/cucumber.json)
          passedFeatures=$(jq '[.[] | select(.elements[].steps[].result.status == "passed")] | length' target/cucumber.json)
          failedFeatures=$(jq '[.[] | select(.elements[].steps[].result.status == "failed")] | length' target/cucumber.json)
          echo "features=$features" >> $GITHUB_ENV
          echo "passedFeatures=$passedFeatures" >> $GITHUB_ENV
          echo "failedFeatures=$failedFeatures" >> $GITHUB_ENV

      - name: Debug parsed values
        run: |
          echo "Total Features: ${{ env.features }}"
          echo "Passed Features: ${{ env.passedFeatures }}"
          echo "Failed Features: ${{ env.failedFeatures }}"

      - name: Send Cucumber report to Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        with:
          message: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Cucumber Test Report"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Total Features:* ${{ env.features }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Passed Features:* ${{ env.passedFeatures }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Failed Features:* ${{ env.failedFeatures }}"
                    }
                  ]
                }
              ]
            }
